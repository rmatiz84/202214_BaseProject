{
	"info": {
		"_postman_id": "9da0158c-99d7-4bbf-8b61-01b8f1e7f801",
		"name": "Aerolineas-Aeropuertos",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "3824375"
	},
	"item": [
		{
			"name": "Agregar aeropuerto a una aerolinea",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"pm.test(\"Codigo de estado es 201\", function () {",
							"   pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/airlines/{{aerolinea_id}}/airports/{{aeropuerto_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airlines",
						"{{aerolinea_id}}",
						"airports",
						"{{aeropuerto_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Agregar aeropuerto invalido a una aerolinea",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Codigo de estado es 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Obtener mensaje de error esperado\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.message).to.eql(\"El aeropuerto con el ID dado no fue encontrado\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/airlines/{{aerolinea_id}}/airports/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airlines",
						"{{aerolinea_id}}",
						"airports",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": []
		},
		{
			"name": "Agregar aeropuerto a una aerolinea invalida",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Codigo de estado es 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Obtener mensaje de error esperado\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.message).to.eql(\"La aerolinea con el ID dado no fue encontrado\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/airlines/00000000-0000-0000-0000-000000000000/airports/{{aeropuerto_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airlines",
						"00000000-0000-0000-0000-000000000000",
						"airports",
						"{{aeropuerto_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener un aeropuerto de una aerolinea",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							" pm.test(\"Codigo de estado es 200\", function () {",
							"   pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/airlines/{{aerolinea_id}}/airports/{{aeropuerto_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airlines",
						"{{aerolinea_id}}",
						"airports",
						"{{aeropuerto_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener un aeropuerto de una aerolinea invalida",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Codigo de estado es 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Obtener mensaje de respuesta esperado\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.message).to.eql(\"La aerolinea con el ID dado no fue encontrado\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/airlines/00000000-0000-0000-0000-000000000000/airports/{{aeropuerto_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airlines",
						"00000000-0000-0000-0000-000000000000",
						"airports",
						"{{aeropuerto_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener todas los aeropuertos de una aerolinea",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Codigo de estado es 200\", function () {",
							"   pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/airlines/{{aerolinea_id}}/airports",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airlines",
						"{{aerolinea_id}}",
						"airports"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener todos los aeropuertos de una aerolinea invalida",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Codigo de estado es 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Obtener mensaje de respuesta esperado\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.message).to.eql(\"La aerolinea con el ID dado no fue encontrado\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/airlines/00000000-0000-0000-0000-000000000000/airports",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airlines",
						"00000000-0000-0000-0000-000000000000",
						"airports"
					]
				}
			},
			"response": []
		},
		{
			"name": "Actualizar aeropuerto de una aerolinea",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Codigo de respuesta es 200\", function () {",
							"   pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\n   {\n       \"id\": \"{{aeropuerto_id}}\"\n   }\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/airlines/{{aerolinea_id}}/airports",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airlines",
						"{{aerolinea_id}}",
						"airports"
					]
				}
			},
			"response": []
		},
		{
			"name": "Actualizar aeropuertos de una aerolinea invalida",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"COdigo de estado es 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Obtener mensaje de respuesta esperado\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.message).to.eql(\"La aerolinea con el ID dado no fue encontrado\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\n   {\n       \"id\": \"{{aeropuerto_id}}\"\n   }\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/airlines/00000000-0000-0000-0000-000000000000/airports",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airlines",
						"00000000-0000-0000-0000-000000000000",
						"airports"
					]
				}
			},
			"response": []
		},
		{
			"name": "Borrar un aeropuerto de una aerolinea",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Codigo de estado es 204\", function () {",
							"   pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/airlines/{{aerolinea_id}}/airports/{{aeropuerto_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airlines",
						"{{aerolinea_id}}",
						"airports",
						"{{aeropuerto_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Borrar un aeropuerto no asociado de una aerolinea",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Codigo de estado es 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Obtener mensaje de respuesta esperado\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.message).to.eql(\"El aeropuerto con el ID dado no se encuentra asociado a la aerolinea\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/airlines/{{aerolinea_id}}/airports/{{aeropuerto_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airlines",
						"{{aerolinea_id}}",
						"airports",
						"{{aeropuerto_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Borrar un aeropuerto de una aerolinea invalida",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Codigo de estado es 412\", function () {",
							"   pm.response.to.have.status(412);",
							"});",
							"",
							"pm.test(\"Obtener mensaje de respuesta esperado\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.message).to.eql(\"La aerolinea con el ID dado no fue encontrado\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/airlines/00000000-0000-0000-0000-000000000000/airports/{{aeropuerto_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airlines",
						"00000000-0000-0000-0000-000000000000",
						"airports",
						"{{aeropuerto_id}}"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "username",
				"value": "<Basic Auth Username>",
				"type": "string"
			},
			{
				"key": "password",
				"value": "<Basic Auth Password>",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000/api/v1",
			"type": "string"
		}
	]
}